function randomNumber(min, max) {
  return Math.floor(Math.random() * (max - min + 1) + min);
}
// B√†i 1
// Vi·∫øt h√†m randArr(n)

// Nh·∫≠n tham s·ªë n l√† m·ªôt s·ªë nguy√™n d∆∞∆°ng (< 10)
// T·∫°o m·ªôt m·∫£ng g·ªìm n ph·∫ßn t·ª≠ c√≥ gi√° tr·ªã ng·∫´u nhi√™n trong kho·∫£ng -10 ƒë·∫øn 10
// K·∫øt qu·∫£ tr·∫£ v·ªÅ m·∫£ng ƒë√≥
// G·ªçi h√†m randArr v√† ƒë·∫∑t gi√° tr·ªã cho bi·∫øn numbers
function randArr(n) {
  let array = [];
  console.log(n)
  for (i = 0; i < n; i++) {
    let rand = randomNumber(-10, 10);
    array += rand + ',';
  }
  return array;
}
let numbers = randArr(randomNumber(1, 9));
console.log(numbers);
// B√†i 2
// Vi·∫øt h√†m sumArr(arr)

// Nh·∫≠n tham s·ªë arr l√† m·ªôt array
// T√≠nh trung b√¨nh c·ªông ph·∫ßn t·ª≠ c√≥ ki·ªÉu number trong arr v√† tr·∫£ v·ªÅ k·∫øt qu·∫£
// G·ªçi h√†m sumArr v·ªõi array numbers, in k·∫øt qu·∫£ ra console

function sumArr(arr) {
  let num = 0;
  
  for (i = 1; i < arr.length; i++) {
    if()
    num += arr[i];
    count++
  }
  console.log(num / 2);
}
sumArr([14, 43, 41, 32])


// B√†i 3
// Vi·∫øt h√†m findMax(arr)

// Nh·∫≠n tham s·ªë arr l√† m·ªôt array
// T√¨m v√† tr·∫£ v·ªÅ gi√° tr·ªã number l·ªõn nh·∫•t trong arr
// G·ªçi h√†m findMax v·ªõi array numbers, in k·∫øt qu·∫£ ra console

function findMax(arr) {
  let max = 0;
  for (i = 1; i < arr.length; i++) {
    if (arr[i] > max) max = arr[i];
  }
  console.log(max);
}
findMax([15, 52, 21, 45])

// B√†i 4
// Vi·∫øt h√†m add(arr, value)

// Nh·∫≠n tham s·ªë arr l√† m·ªôt array v√† value l√† m·ªôt gi√° tr·ªã b·∫•t k·ª≥
// Ki·ªÉm tra value c√≥ trong arr hay kh√¥ng
// N·∫øu kh√¥ng c√≥ th√¨ th√™m gi√° tr·ªã v√†o cu·ªëi arr v√† return index c·ªßa value sau khi th√™m
// N·∫øu c√≥ r·ªìi th√¨ b·ªè qua, return false
// G·ªçi h√†m add v·ªõi array numbers v√† th√™m m·ªôt s·ªë gi√° tr·ªã t√πy √Ω
// In array numbers ra console

function add(arr, value) {
  for (i = 0; i < arr.length; i++) {
    if ( arr[i] !== value ) {
     arr.push(value)
    }
    else if(arr[i] == value){
      return false;
    }
  }
  console.log(arr);  
}
add([12, 344, 23], 22);

// B√†i 5
// Vi·∫øt h√†m remove(arr, value)

// Nh·∫≠n tham s·ªë arr l√† m·ªôt array v√† value l√† m·ªôt gi√° tr·ªã b·∫•t k·ª≥
// Ki·ªÉm tra value c√≥ trong arr hay kh√¥ng
// N·∫øu kh√¥ng c√≥ th√¨ X√ìA TO√ÄN B·ªò gi√° tr·ªã value trong arr v√† return true
// N·∫øu kh√¥ng c√≥ th√¨ b·ªè qua, return false
// G·ªçi h√†m remove v·ªõi array numbers v√† x√≥a m·ªôt s·ªë gi√° tr·ªã t√πy √Ω
// In array numbers ra console

// function remove(arr, value){
//   if()
// }
// remove([12,3,31,53], 53)
// B√†i 6
// Vi·∫øt h√†m reverse(arr)

// Nh·∫≠n tham s·ªë arr l√† m·ªôt array v√† value l√† m·ªôt gi√° tr·ªã b·∫•t k·ª≥
// Sao ch√©p arr ra m·ªôt array m·ªõi, v√† ƒë·∫£o ng∆∞·ª£c th·ª© t·ª± c√°c ph·∫ßn t·ª≠
// K·∫øt qu·∫£ tr·∫£ v·ªÅ array m·ªõi
// G·ªçi h√†m reverse v·ªõi array numbers v√† in k·∫øt qu·∫£ ra console
// B√†i 7
// Vi·∫øt h√†m filter(arr)

// Nh·∫≠n tham s·ªë arr l√† m·ªôt array
// L·ªçc ra c√°c ph·∫ßn t·ª≠ ki·ªÉu number c√≥ gi√° tr·ªã > 0 trong arr v√† l∆∞u v√†o m·ªôt array m·ªõi
// Tr·∫£ v·ªÅ k·∫øt qu·∫£ l√† array m·ªõi
// G·ªçi h√†m filter v·ªõi array numbers v√† in k·∫øt qu·∫£ ra console
// B√†i 8
// Vi·∫øt h√†m map(arr)

// Nh·∫≠n tham s·ªë arr l√† m·ªôt array
// Chuy·ªÉn ƒë·ªïi c√°c ph·∫ßn t·ª≠ c√≥ ki·ªÉu number th√†nh b√¨nh ph∆∞∆°ng c·ªßa ch√≠nh n√≥ v√† l∆∞u v√†o m·ªôt array m·ªõi
// K·∫øt qu·∫£ tr·∫£ v·ªÅ l√† array m·ªõi
// G·ªçi h√†m map v·ªõi array numbers v√† in k·∫øt qu·∫£ ra console
// B√†i 9
// Vi·∫øt h√†m some(arr)

// Ki·ªÉm tra arr l√† m·ªôt array
// Ki·ªÉm tra xem trong arr c√≥ ph·∫ßn t·ª≠ n√†o ki·ªÉu number v√† chia h·∫øt cho c·∫£ 3 v√† 5 hay kh√¥ng
// K·∫øt qu·∫£ tr·∫£ v·ªÅ true n·∫øu c√≥ √≠t nh·∫•t 1 ph·∫ßn t·ª≠ chia h·∫øt, false n·∫øu to√†n b·ªô kh√¥ng chia h·∫øt
// G·ªçi h√†m some v·ªõi array numbers v√† in k·∫øt qu·∫£ ra console
// B√†i 10
// S·∫Øp x·∫øp array numbers theo gi√° tr·ªã tƒÉng d·∫ßn

// üí° Tham kh·∫£o v√† s·ª≠ d·ª•ng method sort üí° sort nh·∫≠n m·ªôt h√†m l√†m tham s·ªë ƒë·ªÉ so s√°nh gi√° tr·ªã